name: Code coverage

on:
  pull_request:
    branches: ["main"]

jobs:
  coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0'

      - name: Install xmllint
        run: sudo apt-get update && sudo apt install -y libxml2-utils

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests with code coverage
        run: dotnet test --collect:"XPlat Code Coverage"

      - name: Generate HTML coverage report
        run : |
          dotnet tool install --global dotnet-reportgenerator-globaltool || true
          export PATH="$PATH:$HOME/.dotnet/tools"
          reportgenerator -reports:"**/TestResults/*/coverage.cobertura.xml" -targetdir:"CoverageReport" -reporttypes:"HtmlInline;TextSummary" -assemblyfilters:"-*Tests"

      - name: Ensure code coverage threshold
        run: |
          threshold=0.80
          failed=0
          while read -r report; do
              coverage=$(xmllint --xpath "string(//coverage/@line-rate)" "$report")
              if [ "$(echo "$coverage < $threshold" | bc -l)" -eq 1 ]; then
                  test_name=$(echo "$report" | tr -s '/' '\n' | awk 'NR==3 {print $1}')
                  printf "%s failed, current coverage is %s, target coverage is %s\n" "$test_name" "$coverage" "$threshold"
                  failed=1
              fi
          done <<<"$(find . -type f -name "coverage.cobertura.xml")"

          if [ $failed -eq 1 ]; then
              echo "::error::Coverage treshold violated"
              exit 1
          fi

      - name: Upload Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: CoverageReport
